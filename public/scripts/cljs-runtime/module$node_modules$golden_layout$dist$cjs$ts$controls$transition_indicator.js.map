{
"version":3,
"file":"module$node_modules$golden_layout$dist$cjs$ts$controls$transition_indicator.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,4EAAA,CAAgG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAExIC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAAI,oBAAA,CAA8B,IAAK,EAEnC,MAAMA,oBAAN,CACI,WAAW,EAAG,CACV,IAAAC,SAAA,CAAgBC,QAAAC,cAAA,CAAuB,KAAvB,CAChB,KAAAF,SAAAG,UAAAC,IAAA,CAA4B,yBAA5B,CACAH,SAAAI,KAAAC,YAAA,CAA0B,IAAAN,SAA1B,CAEA,KAAAO,gBAAA,CADA,IAAAC,WACA,CADkB,IAElB,KAAAC,wBAAA,CAA+B,GAC/B,KAAAC,oBAAA;AAA2B,IAPjB,CASd,OAAO,EAAG,CACN,IAAAV,SAAAW,OAAA,EADM,CAIV,kBAAkB,CAACC,WAAD,CAAcC,SAAd,CAAyB,EAY3C,kBAAkB,EAAG,EAsBrB,OAAO,CAACC,OAAD,CAAU,CACb,MAAMC,KAAOD,OAAAE,sBAAA,EACb,OAAO,CACHC,KAAMF,IAAAE,KADH,CAEHC,IAAKH,IAAAG,IAFF,CAGHC,MAAOL,OAAAM,YAHJ,CAIHC,OAAQP,OAAAQ,aAJL,CAFM,CAhDrB,CA0DA3B,OAAAI,oBAAA,CAA8BA,mBA/D0G;",
"sources":["node_modules/golden-layout/dist/cjs/ts/controls/transition-indicator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$golden_layout$dist$cjs$ts$controls$transition_indicator\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransitionIndicator = void 0;\n/** @internal */\nclass TransitionIndicator {\n    constructor() {\n        this._element = document.createElement('div');\n        this._element.classList.add(\"lm_transition_indicator\" /* TransitionIndicator */);\n        document.body.appendChild(this._element);\n        this._toElement = null;\n        this._fromDimensions = null;\n        this._totalAnimationDuration = 200;\n        this._animationStartTime = null;\n    }\n    destroy() {\n        this._element.remove();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    transitionElements(fromElement, toElement) {\n        /**\n         * TODO - This is not quite as cool as expected. Review.\n         */\n        return;\n        // this._toElement = toElement;\n        // this._animationStartTime = now();\n        // this._fromDimensions = this._measure(fromElement);\n        // this._fromDimensions.opacity = 0.8;\n        // this._element.show().css(this._fromDimensions);\n        // animFrame(fnBind(this._nextAnimationFrame, this));\n    }\n    nextAnimationFrame() {\n        // if (this._toElement === null || this._fromDimensions === null || this._animationStartTime === null) {\n        //     throw new UnexpectedNullError('TINAFTD97115');\n        // } else {\n        //     const toDimensions = this.measure(this._toElement);\n        //     const animationProgress = (now() - this._animationStartTime) / this._totalAnimationDuration;\n        //     const currentFrameStyles = {};\n        //     const cssProperty;\n        //     if (animationProgress >= 1) {\n        //         this._element.style.display = 'none';\n        //         return;\n        //     }\n        //     toDimensions.opacity = 0;\n        //     for (const cssProperty in this._fromDimensions) {\n        //         currentFrameStyles[cssProperty] = this._fromDimensions[cssProperty] +\n        //             (toDimensions[cssProperty] - this._fromDimensions[cssProperty]) *\n        //             animationProgress;\n        //     }\n        //     this._element.css(currentFrameStyles);\n        //     animFrame(fnBind(this._nextAnimationFrame, this));\n        // }\n    }\n    measure(element) {\n        const rect = element.getBoundingClientRect();\n        return {\n            left: rect.left,\n            top: rect.top,\n            width: element.offsetWidth,\n            height: element.offsetHeight,\n        };\n    }\n}\nexports.TransitionIndicator = TransitionIndicator;\n//# sourceMappingURL=transition-indicator.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","TransitionIndicator","_element","document","createElement","classList","add","body","appendChild","_fromDimensions","_toElement","_totalAnimationDuration","_animationStartTime","remove","fromElement","toElement","element","rect","getBoundingClientRect","left","top","width","offsetWidth","height","offsetHeight"]
}
