{
"version":3,
"file":"module$node_modules$flexlayout_react$lib$model$BorderSet.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/flexlayout-react/lib/model/BorderSet.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$flexlayout_react$lib$model$BorderSet\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Orientation_1 = require(\"../Orientation\");\nvar BorderNode_1 = require(\"./BorderNode\");\nvar BorderSet = /** @class */ (function () {\n    /** @hidden @internal */\n    function BorderSet(model) {\n        this._model = model;\n        this._borders = [];\n    }\n    /** @hidden @internal */\n    BorderSet._fromJson = function (json, model) {\n        var borderSet = new BorderSet(model);\n        borderSet._borders = json.map(function (borderJson) { return BorderNode_1.default._fromJson(borderJson, model); });\n        return borderSet;\n    };\n    BorderSet.prototype.getBorders = function () {\n        return this._borders;\n    };\n    /** @hidden @internal */\n    BorderSet.prototype._forEachNode = function (fn) {\n        this._borders.forEach(function (borderNode) {\n            fn(borderNode, 0);\n            borderNode.getChildren().forEach(function (node) {\n                node._forEachNode(fn, 1);\n            });\n        });\n    };\n    /** @hidden @internal */\n    BorderSet.prototype._toJson = function () {\n        return this._borders.map(function (borderNode) { return borderNode._toJson(); });\n    };\n    /** @hidden @internal */\n    BorderSet.prototype._layoutBorder = function (outerInnerRects, metrics) {\n        var rect = outerInnerRects.outer;\n        var height = rect.height;\n        var width = rect.width;\n        var sumHeight = 0;\n        var sumWidth = 0;\n        var adjustableHeight = 0;\n        var adjustableWidth = 0;\n        var showingBorders = this._borders.filter(function (border) { return border.isShowing(); });\n        // sum size of borders to see they will fit\n        for (var _i = 0, showingBorders_1 = showingBorders; _i < showingBorders_1.length; _i++) {\n            var border = showingBorders_1[_i];\n            if (border.isShowing()) {\n                border._setAdjustedSize(border.getSize());\n                var visible = border.getSelected() !== -1;\n                if (border.getLocation().getOrientation() === Orientation_1.default.HORZ) {\n                    sumWidth += border.getBorderBarSize() + this._model.getSplitterSize();\n                    if (visible) {\n                        sumWidth += border.getSize();\n                        adjustableWidth += border.getSize();\n                    }\n                }\n                else {\n                    sumHeight += border.getBorderBarSize() + this._model.getSplitterSize();\n                    if (visible) {\n                        sumHeight += border.getSize();\n                        adjustableHeight += border.getSize();\n                    }\n                }\n            }\n        }\n        // adjust border sizes if too large\n        var j = 0;\n        while ((sumWidth > width && adjustableWidth > 0) || (sumHeight > height && adjustableHeight > 0)) {\n            var border = showingBorders[j];\n            if (border.getSelected() !== -1) {\n                // visible\n                var size = border._getAdjustedSize();\n                if (sumWidth > width && adjustableWidth > 0 && border.getLocation().getOrientation() === Orientation_1.default.HORZ && size > 0) {\n                    border._setAdjustedSize(size - 1);\n                    sumWidth--;\n                    adjustableWidth--;\n                }\n                else if (sumHeight > height && adjustableHeight > 0 && border.getLocation().getOrientation() === Orientation_1.default.VERT && size > 0) {\n                    border._setAdjustedSize(size - 1);\n                    sumHeight--;\n                    adjustableHeight--;\n                }\n            }\n            j = (j + 1) % showingBorders.length;\n        }\n        showingBorders.forEach(function (border) {\n            outerInnerRects.outer = border._layoutBorderOuter(outerInnerRects.outer, metrics);\n        });\n        outerInnerRects.inner = outerInnerRects.outer;\n        showingBorders.forEach(function (border) {\n            outerInnerRects.inner = border._layoutBorderInner(outerInnerRects.inner, metrics);\n        });\n        return outerInnerRects;\n    };\n    /** @hidden @internal */\n    BorderSet.prototype._findDropTargetNode = function (dragNode, x, y) {\n        for (var _i = 0, _a = this._borders; _i < _a.length; _i++) {\n            var border = _a[_i];\n            if (border.isShowing()) {\n                var dropInfo = border.canDrop(dragNode, x, y);\n                if (dropInfo !== undefined) {\n                    return dropInfo;\n                }\n            }\n        }\n        return undefined;\n    };\n    return BorderSet;\n}());\nexports.default = BorderSet;\n//# sourceMappingURL=BorderSet.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Orientation_1","BorderNode_1","BorderSet","model","_model","_borders","_fromJson","BorderSet._fromJson","json","borderSet","map","borderJson","default","prototype","getBorders","BorderSet.prototype.getBorders","_forEachNode","BorderSet.prototype._forEachNode","fn","forEach","borderNode","getChildren","node","_toJson","BorderSet.prototype._toJson","_layoutBorder","BorderSet.prototype._layoutBorder","outerInnerRects","metrics","rect","outer","height","width","sumHeight","sumWidth","adjustableHeight","adjustableWidth","showingBorders","filter","border","isShowing","_i","length","_setAdjustedSize","getSize","visible","getSelected","getLocation","getOrientation","HORZ","getBorderBarSize","getSplitterSize","j","size","_getAdjustedSize","VERT","_layoutBorderOuter","inner","_layoutBorderInner","_findDropTargetNode","BorderSet.prototype._findDropTargetNode","dragNode","x","y","_a","dropInfo","canDrop","undefined"]
}
