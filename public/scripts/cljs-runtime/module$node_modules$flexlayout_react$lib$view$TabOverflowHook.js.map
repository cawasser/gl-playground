{
"version":3,
"file":"module$node_modules$flexlayout_react$lib$view$TabOverflowHook.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/flexlayout-react/lib/view/TabOverflowHook.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$flexlayout_react$lib$view$TabOverflowHook\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useTabOverflow = void 0;\nvar React = require(\"react\");\nvar Rect_1 = require(\"../Rect\");\nvar TabSetNode_1 = require(\"../model/TabSetNode\");\nvar Orientation_1 = require(\"../Orientation\");\n/** @hidden @internal */\nexports.useTabOverflow = function (node, orientation, toolbarRef) {\n    var firstRender = React.useRef(true);\n    var lastRect = React.useRef(new Rect_1.default(0, 0, 0, 0));\n    var selfRef = React.useRef(null);\n    var _a = React.useState(0), position = _a[0], setPosition = _a[1];\n    var userControlledLeft = React.useRef(false);\n    var _b = React.useState([]), hiddenTabs = _b[0], setHiddenTabs = _b[1];\n    // if selected node or tabset/border rectangle change then unset usercontrolled (so selected tab will be kept in view)\n    React.useLayoutEffect(function () {\n        userControlledLeft.current = false;\n    }, [node.getSelectedNode(), node.getRect().width, node.getRect().height]);\n    React.useLayoutEffect(function () {\n        updateVisibleTabs();\n    });\n    React.useEffect(function () {\n        var instance = selfRef.current;\n        instance.addEventListener('wheel', onWheel);\n        return function () {\n            instance.removeEventListener('wheel', onWheel);\n        };\n    }, []);\n    // needed to prevent default mouse wheel over tabset/border (cannot do with react event?)\n    var onWheel = function (event) {\n        event.preventDefault();\n    };\n    var getNear = function (rect) {\n        if (orientation === Orientation_1.default.HORZ) {\n            return rect.x;\n        }\n        else {\n            return rect.y;\n        }\n    };\n    var getFar = function (rect) {\n        if (orientation === Orientation_1.default.HORZ) {\n            return rect.getRight();\n        }\n        else {\n            return rect.getBottom();\n        }\n    };\n    var getSize = function (rect) {\n        if (orientation === Orientation_1.default.HORZ) {\n            return rect.width;\n        }\n        else {\n            return rect.height;\n        }\n    };\n    var updateVisibleTabs = function () {\n        var tabMargin = 2;\n        var nodeRect = node instanceof TabSetNode_1.default ? node.getRect() : node.getTabHeaderRect();\n        var lastChild = node.getChildren()[node.getChildren().length - 1];\n        if (firstRender.current === true ||\n            nodeRect.width !== lastRect.current.width || // incase rect changed between first render and second\n            nodeRect.height !== lastRect.current.height) {\n            lastRect.current = nodeRect;\n            var enabled = node instanceof TabSetNode_1.default ? node.isEnableTabStrip() === true : true;\n            var endPos = getFar(nodeRect) - getSize(toolbarRef.current.getBoundingClientRect());\n            if (enabled && node.getChildren().length > 0) {\n                if (hiddenTabs.length === 0 && position === 0 && getFar(lastChild.getTabRect()) + tabMargin < endPos) {\n                    return; // nothing to do all tabs are shown in available space\n                }\n                endPos -= hiddenTabs.length > 0 ? (orientation === Orientation_1.default.HORZ ? 10 : 0) : 45; // will need hidden tabs\n                var shiftPos = 0;\n                var selectedTab = node.getSelectedNode();\n                if (selectedTab && !userControlledLeft.current) {\n                    var selectedRect = selectedTab.getTabRect();\n                    var selectedStart = getNear(selectedRect) - tabMargin;\n                    var selectedEnd = getFar(selectedRect) + tabMargin;\n                    // when selected tab is larger than available space then align left\n                    if (getSize(selectedRect) + 2 * tabMargin >= endPos - getNear(nodeRect)) {\n                        shiftPos = getNear(nodeRect) - selectedStart;\n                    }\n                    else {\n                        if (selectedEnd > endPos || selectedStart < getNear(nodeRect)) {\n                            if (selectedStart < getNear(nodeRect)) {\n                                shiftPos = getNear(nodeRect) - selectedStart;\n                            }\n                            // use second if statement to prevent tab moving back then forwards if not enough space for single tab\n                            if (selectedEnd + shiftPos > endPos) {\n                                shiftPos = endPos - selectedEnd;\n                            }\n                        }\n                    }\n                }\n                var extraSpace = Math.max(0, endPos - (getFar(lastChild.getTabRect()) + tabMargin + shiftPos));\n                var newPosition = Math.min(0, position + shiftPos + extraSpace);\n                // find hidden tabs\n                var diff = newPosition - position;\n                var hidden = [];\n                for (var i = 0; i < node.getChildren().length; i++) {\n                    var child = node.getChildren()[i];\n                    if (getNear(child.getTabRect()) + diff < getNear(nodeRect) || getFar(child.getTabRect()) + diff > endPos) {\n                        hidden.push({ node: child, index: i });\n                    }\n                }\n                firstRender.current = false; // need to do a second render\n                setHiddenTabs(hidden);\n                setPosition(newPosition);\n            }\n        }\n        else {\n            firstRender.current = true;\n        }\n    };\n    var onMouseWheel = function (event) {\n        var delta = 0;\n        if (Math.abs(event.deltaX) > Math.abs(event.deltaY)) {\n            delta = -event.deltaX;\n        }\n        else {\n            delta = -event.deltaY;\n        }\n        if (event.deltaMode === 1) {\n            // DOM_DELTA_LINE\t0x01\tThe delta values are specified in lines.\n            delta *= 40;\n        }\n        setPosition(position + delta);\n        userControlledLeft.current = true;\n        event.stopPropagation();\n    };\n    return { selfRef: selfRef, position: position, userControlledLeft: userControlledLeft, hiddenTabs: hiddenTabs, onMouseWheel: onMouseWheel };\n};\n//# sourceMappingURL=TabOverflowHook.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","useTabOverflow","React","Rect_1","TabSetNode_1","Orientation_1","exports.useTabOverflow","node","orientation","toolbarRef","firstRender","useRef","lastRect","default","selfRef","_a","useState","position","setPosition","userControlledLeft","_b","hiddenTabs","setHiddenTabs","useLayoutEffect","current","getSelectedNode","getRect","width","height","nodeRect","getTabHeaderRect","lastChild","getChildren","length","enabled","isEnableTabStrip","endPos","getFar","getSize","getBoundingClientRect","getTabRect","tabMargin","HORZ","shiftPos","selectedTab","selectedRect","selectedStart","getNear","selectedEnd","extraSpace","Math","max","newPosition","min","diff","hidden","i","child","push","index","useEffect","instance","addEventListener","onWheel","removeEventListener","event","preventDefault","rect","x","y","getRight","getBottom","onMouseWheel","delta","abs","deltaX","deltaY","deltaMode","stopPropagation"]
}
