{
"version":3,
"file":"module$node_modules$flexlayout_react$lib$model$RowNode.js",
"lineCount":25,
"mappings":"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",
"sources":["node_modules/flexlayout-react/lib/model/RowNode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$flexlayout_react$lib$model$RowNode\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AttributeDefinitions_1 = require(\"../AttributeDefinitions\");\nvar DockLocation_1 = require(\"../DockLocation\");\nvar DropInfo_1 = require(\"../DropInfo\");\nvar Orientation_1 = require(\"../Orientation\");\nvar Rect_1 = require(\"../Rect\");\nvar BorderNode_1 = require(\"./BorderNode\");\nvar Node_1 = require(\"./Node\");\nvar SplitterNode_1 = require(\"./SplitterNode\");\nvar TabSetNode_1 = require(\"./TabSetNode\");\nvar RowNode = /** @class */ (function (_super) {\n    __extends(RowNode, _super);\n    /** @hidden @internal */\n    function RowNode(model, json) {\n        var _this = _super.call(this, model) || this;\n        _this._dirty = true;\n        _this._drawChildren = [];\n        _this.minHeight = 0;\n        _this.minWidth = 0;\n        RowNode._attributeDefinitions.fromJson(json, _this._attributes);\n        model._addNode(_this);\n        return _this;\n    }\n    /** @hidden @internal */\n    RowNode._fromJson = function (json, model) {\n        var newLayoutNode = new RowNode(model, json);\n        if (json.children != null) {\n            for (var _i = 0, _a = json.children; _i < _a.length; _i++) {\n                var jsonChild = _a[_i];\n                if (jsonChild.type === TabSetNode_1.default.TYPE) {\n                    var child = TabSetNode_1.default._fromJson(jsonChild, model);\n                    newLayoutNode._addChild(child);\n                }\n                else {\n                    var child = RowNode._fromJson(jsonChild, model);\n                    newLayoutNode._addChild(child);\n                }\n            }\n        }\n        return newLayoutNode;\n    };\n    /** @hidden @internal */\n    RowNode._createAttributeDefinitions = function () {\n        var attributeDefinitions = new AttributeDefinitions_1.default();\n        attributeDefinitions.add(\"type\", RowNode.TYPE, true);\n        attributeDefinitions.add(\"id\", undefined);\n        attributeDefinitions.add(\"weight\", 100);\n        attributeDefinitions.add(\"width\", undefined);\n        attributeDefinitions.add(\"height\", undefined);\n        return attributeDefinitions;\n    };\n    RowNode.prototype.getWeight = function () {\n        return this._attributes.weight;\n    };\n    RowNode.prototype.getWidth = function () {\n        return this._getAttributeAsNumberOrUndefined(\"width\");\n    };\n    RowNode.prototype.getHeight = function () {\n        return this._getAttributeAsNumberOrUndefined(\"height\");\n    };\n    /** @hidden @internal */\n    RowNode.prototype._setWeight = function (weight) {\n        this._attributes.weight = weight;\n    };\n    /** @hidden @internal */\n    RowNode.prototype._layout = function (rect, metrics) {\n        _super.prototype._layout.call(this, rect, metrics);\n        var pixelSize = this._rect._getSize(this.getOrientation());\n        var totalWeight = 0;\n        var fixedPixels = 0;\n        var prefPixels = 0;\n        var totalPrefWeight = 0;\n        var drawChildren = this._getDrawChildren();\n        for (var _i = 0, drawChildren_1 = drawChildren; _i < drawChildren_1.length; _i++) {\n            var child = drawChildren_1[_i];\n            var prefSize = child._getPrefSize(this.getOrientation());\n            if (child._isFixed()) {\n                if (prefSize !== undefined) {\n                    fixedPixels += prefSize;\n                }\n            }\n            else {\n                if (prefSize === undefined) {\n                    totalWeight += child.getWeight();\n                }\n                else {\n                    prefPixels += prefSize;\n                    totalPrefWeight += child.getWeight();\n                }\n            }\n        }\n        var resizePreferred = false;\n        var availablePixels = pixelSize - fixedPixels - prefPixels;\n        if (availablePixels < 0) {\n            availablePixels = pixelSize - fixedPixels;\n            resizePreferred = true;\n            totalWeight += totalPrefWeight;\n        }\n        // assign actual pixel sizes\n        var totalSizeGiven = 0;\n        var variableSize = 0;\n        for (var _a = 0, drawChildren_2 = drawChildren; _a < drawChildren_2.length; _a++) {\n            var child = drawChildren_2[_a];\n            var prefSize = child._getPrefSize(this.getOrientation());\n            if (child._isFixed()) {\n                if (prefSize !== undefined) {\n                    child._setTempSize(prefSize);\n                }\n            }\n            else {\n                if (prefSize == null || resizePreferred) {\n                    if (totalWeight === 0) {\n                        child._setTempSize(0);\n                    }\n                    else {\n                        var minSize = child.getMinSize(this.getOrientation());\n                        var size = Math.floor(availablePixels * (child.getWeight() / totalWeight));\n                        child._setTempSize(Math.max(minSize, size));\n                    }\n                    variableSize += child._getTempSize();\n                }\n                else {\n                    child._setTempSize(prefSize);\n                }\n            }\n            totalSizeGiven += child._getTempSize();\n        }\n        // adjust sizes to exactly fit\n        if (variableSize > 0) {\n            while (totalSizeGiven < pixelSize) {\n                for (var _b = 0, drawChildren_3 = drawChildren; _b < drawChildren_3.length; _b++) {\n                    var child = drawChildren_3[_b];\n                    if (!(child instanceof SplitterNode_1.default)) {\n                        var prefSize = child._getPrefSize(this.getOrientation());\n                        if (!child._isFixed() && (prefSize === undefined || resizePreferred) && totalSizeGiven < pixelSize) {\n                            child._setTempSize(child._getTempSize() + 1);\n                            totalSizeGiven++;\n                        }\n                    }\n                }\n            }\n            // decrease size using nodes not at there minimum\n            while (totalSizeGiven > pixelSize) {\n                var changed = false;\n                for (var _c = 0, drawChildren_4 = drawChildren; _c < drawChildren_4.length; _c++) {\n                    var child = drawChildren_4[_c];\n                    if (!(child instanceof SplitterNode_1.default)) {\n                        var minSize = child.getMinSize(this.getOrientation());\n                        var size = child._getTempSize();\n                        if (size > minSize && totalSizeGiven > pixelSize) {\n                            child._setTempSize(child._getTempSize() - 1);\n                            totalSizeGiven--;\n                            changed = true;\n                        }\n                    }\n                }\n                if (!changed) {\n                    // all children are at min values\n                    break;\n                }\n            }\n            // if still too big then simply reduce all nodes until fits\n            while (totalSizeGiven > pixelSize) {\n                var changed = false;\n                for (var _d = 0, drawChildren_5 = drawChildren; _d < drawChildren_5.length; _d++) {\n                    var child = drawChildren_5[_d];\n                    if (!(child instanceof SplitterNode_1.default)) {\n                        var size = child._getTempSize();\n                        if (size > 0 && totalSizeGiven > pixelSize) {\n                            child._setTempSize(child._getTempSize() - 1);\n                            totalSizeGiven--;\n                            changed = true;\n                        }\n                    }\n                }\n                if (!changed) {\n                    // all children are at 0 values\n                    break;\n                }\n            }\n        }\n        // layout children\n        var p = 0;\n        for (var _e = 0, drawChildren_6 = drawChildren; _e < drawChildren_6.length; _e++) {\n            var child = drawChildren_6[_e];\n            if (this.getOrientation() === Orientation_1.default.HORZ) {\n                child._layout(new Rect_1.default(this._rect.x + p, this._rect.y, child._getTempSize(), this._rect.height), metrics);\n            }\n            else {\n                child._layout(new Rect_1.default(this._rect.x, this._rect.y + p, this._rect.width, child._getTempSize()), metrics);\n            }\n            p += child._getTempSize();\n        }\n        return true;\n    };\n    /** @hidden @internal */\n    RowNode.prototype._getSplitterBounds = function (splitterNode, useMinSize) {\n        if (useMinSize === void 0) { useMinSize = false; }\n        var pBounds = [0, 0];\n        var drawChildren = this._getDrawChildren();\n        var p = drawChildren.indexOf(splitterNode);\n        var node1 = drawChildren[p - 1];\n        var node2 = drawChildren[p + 1];\n        if (this.getOrientation() === Orientation_1.default.HORZ) {\n            var minSize1 = useMinSize ? node1.getMinWidth() : 0;\n            var minSize2 = useMinSize ? node2.getMinWidth() : 0;\n            pBounds[0] = node1.getRect().x + minSize1;\n            pBounds[1] = node2.getRect().getRight() - splitterNode.getWidth() - minSize2;\n        }\n        else {\n            var minSize1 = useMinSize ? node1.getMinHeight() : 0;\n            var minSize2 = useMinSize ? node2.getMinHeight() : 0;\n            pBounds[0] = node1.getRect().y + minSize1;\n            pBounds[1] = node2.getRect().getBottom() - splitterNode.getHeight() - minSize2;\n        }\n        return pBounds;\n    };\n    /** @hidden @internal */\n    RowNode.prototype._calculateSplit = function (splitter, splitterPos) {\n        var rtn;\n        var drawChildren = this._getDrawChildren();\n        var p = drawChildren.indexOf(splitter);\n        var pBounds = this._getSplitterBounds(splitter);\n        var weightedLength = drawChildren[p - 1].getWeight() + drawChildren[p + 1].getWeight();\n        var pixelWidth1 = Math.max(0, splitterPos - pBounds[0]);\n        var pixelWidth2 = Math.max(0, pBounds[1] - splitterPos);\n        if (pixelWidth1 + pixelWidth2 > 0) {\n            var weight1 = (pixelWidth1 * weightedLength) / (pixelWidth1 + pixelWidth2);\n            var weight2 = (pixelWidth2 * weightedLength) / (pixelWidth1 + pixelWidth2);\n            rtn = {\n                node1Id: drawChildren[p - 1].getId(),\n                weight1: weight1,\n                pixelWidth1: pixelWidth1,\n                node2Id: drawChildren[p + 1].getId(),\n                weight2: weight2,\n                pixelWidth2: pixelWidth2,\n            };\n        }\n        return rtn;\n    };\n    /** @hidden @internal */\n    RowNode.prototype._getDrawChildren = function () {\n        if (this._dirty) {\n            this._drawChildren = [];\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                if (i !== 0) {\n                    var newSplitter = new SplitterNode_1.default(this._model);\n                    newSplitter._setParent(this);\n                    this._drawChildren.push(newSplitter);\n                }\n                this._drawChildren.push(child);\n            }\n            this._dirty = false;\n        }\n        return this._drawChildren;\n    };\n    /** @hidden @internal */\n    RowNode.prototype.getMinSize = function (orientation) {\n        if (orientation === Orientation_1.default.HORZ) {\n            return this.getMinWidth();\n        }\n        else {\n            return this.getMinHeight();\n        }\n    };\n    /** @hidden @internal */\n    RowNode.prototype.getMinWidth = function () {\n        return this.minWidth;\n    };\n    /** @hidden @internal */\n    RowNode.prototype.getMinHeight = function () {\n        return this.minHeight;\n    };\n    /** @hidden @internal */\n    RowNode.prototype.calcMinSize = function () {\n        var _this = this;\n        this.minHeight = 0;\n        this.minWidth = 0;\n        var first = true;\n        this._children.forEach(function (child) {\n            var c = child;\n            if (c instanceof RowNode) {\n                c.calcMinSize();\n            }\n            if (_this.getOrientation() === Orientation_1.default.VERT) {\n                _this.minHeight += c.getMinHeight();\n                if (!first) {\n                    _this.minHeight += _this._model.getSplitterSize();\n                }\n                _this.minWidth = Math.max(_this.minWidth, c.getMinWidth());\n            }\n            else {\n                _this.minWidth += c.getMinWidth();\n                if (!first) {\n                    _this.minWidth += _this._model.getSplitterSize();\n                }\n                _this.minHeight = Math.max(_this.minHeight, c.getMinHeight());\n            }\n            first = false;\n        });\n    };\n    /** @hidden @internal */\n    RowNode.prototype._tidy = function () {\n        var i = 0;\n        while (i < this._children.length) {\n            var child = this._children[i];\n            if (child instanceof RowNode) {\n                child._tidy();\n                var childChildren = child.getChildren();\n                if (childChildren.length === 0) {\n                    this._removeChild(child);\n                }\n                else if (childChildren.length === 1) {\n                    // hoist child/children up to this level\n                    var subchild = childChildren[0];\n                    this._removeChild(child);\n                    if (subchild instanceof RowNode) {\n                        var subChildrenTotal = 0;\n                        var subChildChildren = subchild.getChildren();\n                        for (var _i = 0, subChildChildren_1 = subChildChildren; _i < subChildChildren_1.length; _i++) {\n                            var ssc = subChildChildren_1[_i];\n                            var subsubChild = ssc;\n                            subChildrenTotal += subsubChild.getWeight();\n                        }\n                        for (var j = 0; j < subChildChildren.length; j++) {\n                            var subsubChild = subChildChildren[j];\n                            subsubChild._setWeight((child.getWeight() * subsubChild.getWeight()) / subChildrenTotal);\n                            this._addChild(subsubChild, i + j);\n                        }\n                    }\n                    else {\n                        subchild._setWeight(child.getWeight());\n                        this._addChild(subchild, i);\n                    }\n                }\n                else {\n                    i++;\n                }\n            }\n            else if (child instanceof TabSetNode_1.default && child.getChildren().length === 0) {\n                if (child.isEnableDeleteWhenEmpty()) {\n                    this._removeChild(child);\n                    if (child === this._model.getMaximizedTabset()) {\n                        this._model._setMaximizedTabset(undefined);\n                    }\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                i++;\n            }\n        }\n        // add tabset into empty root\n        if (this === this._model.getRoot() && this._children.length === 0) {\n            var child = new TabSetNode_1.default(this._model, { type: \"tabset\" });\n            this._model._setActiveTabset(child);\n            this._addChild(child);\n        }\n    };\n    /** @hidden @internal */\n    RowNode.prototype.canDrop = function (dragNode, x, y) {\n        var yy = y - this._rect.y;\n        var xx = x - this._rect.x;\n        var w = this._rect.width;\n        var h = this._rect.height;\n        var margin = 10; // height of edge rect\n        var half = 50; // half width of edge rect\n        var dropInfo;\n        if (this._model.isEnableEdgeDock() && this._parent === undefined) {\n            // _root row\n            if (x < this._rect.x + margin && yy > h / 2 - half && yy < h / 2 + half) {\n                var dockLocation = DockLocation_1.default.LEFT;\n                var outlineRect = dockLocation.getDockRect(this._rect);\n                outlineRect.width = outlineRect.width / 2;\n                dropInfo = new DropInfo_1.default(this, outlineRect, dockLocation, -1, \"flexlayout__outline_rect_edge\");\n            }\n            else if (x > this._rect.getRight() - margin && yy > h / 2 - half && yy < h / 2 + half) {\n                var dockLocation = DockLocation_1.default.RIGHT;\n                var outlineRect = dockLocation.getDockRect(this._rect);\n                outlineRect.width = outlineRect.width / 2;\n                outlineRect.x += outlineRect.width;\n                dropInfo = new DropInfo_1.default(this, outlineRect, dockLocation, -1, \"flexlayout__outline_rect_edge\");\n            }\n            else if (y < this._rect.y + margin && xx > w / 2 - half && xx < w / 2 + half) {\n                var dockLocation = DockLocation_1.default.TOP;\n                var outlineRect = dockLocation.getDockRect(this._rect);\n                outlineRect.height = outlineRect.height / 2;\n                dropInfo = new DropInfo_1.default(this, outlineRect, dockLocation, -1, \"flexlayout__outline_rect_edge\");\n            }\n            else if (y > this._rect.getBottom() - margin && xx > w / 2 - half && xx < w / 2 + half) {\n                var dockLocation = DockLocation_1.default.BOTTOM;\n                var outlineRect = dockLocation.getDockRect(this._rect);\n                outlineRect.height = outlineRect.height / 2;\n                outlineRect.y += outlineRect.height;\n                dropInfo = new DropInfo_1.default(this, outlineRect, dockLocation, -1, \"flexlayout__outline_rect_edge\");\n            }\n            if (dropInfo !== undefined) {\n                if (!dragNode._canDockInto(dragNode, dropInfo)) {\n                    return undefined;\n                }\n            }\n        }\n        return dropInfo;\n    };\n    /** @hidden @internal */\n    RowNode.prototype.drop = function (dragNode, location, index) {\n        var dockLocation = location;\n        var parent = dragNode.getParent();\n        if (parent) {\n            parent._removeChild(dragNode);\n        }\n        if (parent !== undefined && parent.getType() === TabSetNode_1.default.TYPE) {\n            parent._setSelected(0);\n        }\n        if (parent !== undefined && parent.getType() === BorderNode_1.default.TYPE) {\n            parent._setSelected(-1);\n        }\n        var tabSet;\n        if (dragNode instanceof TabSetNode_1.default) {\n            tabSet = dragNode;\n        }\n        else {\n            tabSet = new TabSetNode_1.default(this._model, {});\n            tabSet._addChild(dragNode);\n        }\n        var size = this._children.reduce(function (sum, child) {\n            return sum + child.getWeight();\n        }, 0);\n        if (size === 0) {\n            size = 100;\n        }\n        tabSet._setWeight(size / 3);\n        if (dockLocation === DockLocation_1.default.LEFT) {\n            this._addChild(tabSet, 0);\n        }\n        else if (dockLocation === DockLocation_1.default.RIGHT) {\n            this._addChild(tabSet);\n        }\n        else if (dockLocation === DockLocation_1.default.TOP) {\n            var vrow = new RowNode(this._model, {});\n            var hrow_1 = new RowNode(this._model, {});\n            hrow_1._setWeight(75);\n            tabSet._setWeight(25);\n            this._children.forEach(function (child) {\n                hrow_1._addChild(child);\n            });\n            this._removeAll();\n            vrow._addChild(tabSet);\n            vrow._addChild(hrow_1);\n            this._addChild(vrow);\n        }\n        else if (dockLocation === DockLocation_1.default.BOTTOM) {\n            var vrow = new RowNode(this._model, {});\n            var hrow_2 = new RowNode(this._model, {});\n            hrow_2._setWeight(75);\n            tabSet._setWeight(25);\n            this._children.forEach(function (child) {\n                hrow_2._addChild(child);\n            });\n            this._removeAll();\n            vrow._addChild(hrow_2);\n            vrow._addChild(tabSet);\n            this._addChild(vrow);\n        }\n        this._model._setActiveTabset(tabSet);\n        this._model._tidy();\n    };\n    /** @hidden @internal */\n    RowNode.prototype._toJson = function () {\n        var json = {};\n        RowNode._attributeDefinitions.toJson(json, this._attributes);\n        json.children = [];\n        this._children.forEach(function (child) {\n            json.children.push(child._toJson());\n        });\n        return json;\n    };\n    RowNode.prototype.isEnableDrop = function () {\n        return true;\n    };\n    /** @hidden @internal */\n    RowNode.prototype._getPrefSize = function (orientation) {\n        var prefSize = this.getWidth();\n        if (orientation === Orientation_1.default.VERT) {\n            prefSize = this.getHeight();\n        }\n        return prefSize;\n    };\n    /** @hidden @internal */\n    RowNode.prototype._getAttributeDefinitions = function () {\n        return RowNode._attributeDefinitions;\n    };\n    /** @hidden @internal */\n    RowNode.prototype._updateAttrs = function (json) {\n        RowNode._attributeDefinitions.update(json, this._attributes);\n    };\n    RowNode.TYPE = \"row\";\n    /** @hidden @internal */\n    RowNode._attributeDefinitions = RowNode._createAttributeDefinitions();\n    return RowNode;\n}(Node_1.default));\nexports.default = RowNode;\n//# sourceMappingURL=RowNode.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","defineProperty","value","AttributeDefinitions_1","DockLocation_1","DropInfo_1","Orientation_1","Rect_1","BorderNode_1","Node_1","SplitterNode_1","TabSetNode_1","RowNode","_super","model","json","_this","_dirty","_drawChildren","minHeight","minWidth","_attributeDefinitions","fromJson","_attributes","_addNode","_fromJson","RowNode._fromJson","newLayoutNode","children","_i","_a","length","jsonChild","child","type","default","TYPE","_addChild","_createAttributeDefinitions","RowNode._createAttributeDefinitions","attributeDefinitions","add","undefined","getWeight","RowNode.prototype.getWeight","weight","getWidth","RowNode.prototype.getWidth","_getAttributeAsNumberOrUndefined","getHeight","RowNode.prototype.getHeight","_setWeight","RowNode.prototype._setWeight","_layout","RowNode.prototype._layout","rect","metrics","pixelSize","_rect","_getSize","getOrientation","totalWeight","fixedPixels","prefPixels","totalPrefWeight","drawChildren","_getDrawChildren","prefSize","_getPrefSize","_isFixed","resizePreferred","availablePixels","variableSize","totalSizeGiven","_setTempSize","minSize","getMinSize","size","Math","floor","max","_getTempSize","_b","drawChildren_3","changed","_c","drawChildren_4","_d","drawChildren_5","_e","HORZ","x","y","height","width","_getSplitterBounds","RowNode.prototype._getSplitterBounds","splitterNode","useMinSize","pBounds","indexOf","node1","node2","minSize1","getMinWidth","minSize2","getRect","getRight","getMinHeight","getBottom","_calculateSplit","RowNode.prototype._calculateSplit","splitter","splitterPos","weightedLength","pixelWidth1","pixelWidth2","weight1","weight2","rtn","node1Id","getId","node2Id","RowNode.prototype._getDrawChildren","i","_children","newSplitter","_model","_setParent","push","RowNode.prototype.getMinSize","orientation","RowNode.prototype.getMinWidth","RowNode.prototype.getMinHeight","calcMinSize","RowNode.prototype.calcMinSize","first","forEach","VERT","getSplitterSize","_tidy","RowNode.prototype._tidy","childChildren","getChildren","_removeChild","subchild","subChildrenTotal","subChildChildren","subChildChildren_1","subsubChild","ssc","j","isEnableDeleteWhenEmpty","getMaximizedTabset","_setMaximizedTabset","getRoot","_setActiveTabset","canDrop","RowNode.prototype.canDrop","dragNode","yy","xx","w","h","isEnableEdgeDock","_parent","margin","half","dockLocation","LEFT","outlineRect","getDockRect","dropInfo","RIGHT","TOP","BOTTOM","_canDockInto","drop","RowNode.prototype.drop","location","index","parent","getParent","getType","_setSelected","tabSet","reduce","sum","vrow","hrow_1","_removeAll","hrow_2","_toJson","RowNode.prototype._toJson","toJson","isEnableDrop","RowNode.prototype.isEnableDrop","RowNode.prototype._getPrefSize","_getAttributeDefinitions","RowNode.prototype._getAttributeDefinitions","_updateAttrs","RowNode.prototype._updateAttrs","update"]
}
