{
"version":3,
"file":"module$node_modules$golden_layout$dist$cjs$ts$utils$event_emitter.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/golden-layout/dist/cjs/ts/utils/event-emitter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$golden_layout$dist$cjs$ts$utils$event_emitter\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventEmitter = void 0;\n/**\n * A generic and very fast EventEmitter implementation. On top of emitting the actual event it emits an\n * {@link (EventEmitter:namespace).ALL_EVENT} event for every event triggered. This allows to hook into it and proxy events forwards\n * @public\n */\nclass EventEmitter {\n    constructor() {\n        /** @internal */\n        this._allEventSubscriptions = [];\n        /** @internal */\n        this._subscriptionsMap = new Map();\n        /**\n         * Alias for off\n         */\n        this.unbind = this.removeEventListener;\n        /**\n         * Alias for emit\n         */\n        this.trigger = this.emit;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    tryBubbleEvent(name, args) {\n        // overridden by ContentItem\n    }\n    /**\n     * Emit an event and notify listeners\n     *\n     * @param eventName - The name of the event\n     * @param args - Additional arguments that will be passed to the listener\n     */\n    emit(eventName, ...args) {\n        let subcriptions = this._subscriptionsMap.get(eventName);\n        if (subcriptions !== undefined) {\n            subcriptions = subcriptions.slice();\n            for (let i = 0; i < subcriptions.length; i++) {\n                const subscription = subcriptions[i];\n                subscription(...args);\n            }\n        }\n        this.emitAllEvent(eventName, args);\n        this.tryBubbleEvent(eventName, args);\n    }\n    /** @internal */\n    emitUnknown(eventName, ...args) {\n        let subs = this._subscriptionsMap.get(eventName);\n        if (subs !== undefined) {\n            subs = subs.slice();\n            for (let i = 0; i < subs.length; i++) {\n                subs[i](...args);\n            }\n        }\n        this.emitAllEvent(eventName, args);\n        this.tryBubbleEvent(eventName, args);\n    }\n    /* @internal **/\n    emitBaseBubblingEvent(eventName) {\n        const event = new EventEmitter.BubblingEvent(eventName, this);\n        this.emitUnknown(eventName, event);\n    }\n    /** @internal */\n    emitUnknownBubblingEvent(eventName) {\n        const event = new EventEmitter.BubblingEvent(eventName, this);\n        this.emitUnknown(eventName, event);\n    }\n    /**\n     * Removes a listener for an event, or all listeners if no callback and context is provided.\n     * @param eventName - The name of the event\n     * @param callback - The previously registered callback method (optional)\n     */\n    removeEventListener(eventName, callback) {\n        const unknownCallback = callback;\n        this.removeUnknownEventListener(eventName, unknownCallback);\n    }\n    off(eventName, callback) {\n        this.removeEventListener(eventName, callback);\n    }\n    /**\n     * Listen for events\n     *\n     * @param eventName - The name of the event to listen to\n     * @param callback - The callback to execute when the event occurs\n     */\n    addEventListener(eventName, callback) {\n        const unknownCallback = callback;\n        this.addUnknownEventListener(eventName, unknownCallback);\n    }\n    on(eventName, callback) {\n        this.addEventListener(eventName, callback);\n    }\n    /** @internal */\n    addUnknownEventListener(eventName, callback) {\n        if (eventName === EventEmitter.ALL_EVENT) {\n            this._allEventSubscriptions.push(callback);\n        }\n        else {\n            let subscriptions = this._subscriptionsMap.get(eventName);\n            if (subscriptions !== undefined) {\n                subscriptions.push(callback);\n            }\n            else {\n                subscriptions = [callback];\n                this._subscriptionsMap.set(eventName, subscriptions);\n            }\n        }\n    }\n    /** @internal */\n    removeUnknownEventListener(eventName, callback) {\n        if (eventName === EventEmitter.ALL_EVENT) {\n            this.removeSubscription(eventName, this._allEventSubscriptions, callback);\n        }\n        else {\n            const subscriptions = this._subscriptionsMap.get(eventName);\n            if (subscriptions === undefined) {\n                throw new Error('No subscribtions to unsubscribe for event ' + eventName);\n            }\n            else {\n                this.removeSubscription(eventName, subscriptions, callback);\n            }\n        }\n    }\n    /** @internal */\n    removeSubscription(eventName, subscriptions, callback) {\n        const idx = subscriptions.indexOf(callback);\n        if (idx < 0) {\n            throw new Error('Nothing to unbind for ' + eventName);\n        }\n        else {\n            subscriptions.splice(idx, 1);\n        }\n    }\n    /** @internal */\n    emitAllEvent(eventName, args) {\n        const allEventSubscriptionsCount = this._allEventSubscriptions.length;\n        if (allEventSubscriptionsCount > 0) {\n            const unknownArgs = args.slice();\n            unknownArgs.unshift(eventName);\n            const allEventSubcriptions = this._allEventSubscriptions.slice();\n            for (let i = 0; i < allEventSubscriptionsCount; i++) {\n                allEventSubcriptions[i](unknownArgs);\n            }\n        }\n    }\n}\nexports.EventEmitter = EventEmitter;\n/** @public */\n(function (EventEmitter) {\n    /**\n     * The name of the event that's triggered for every event\n     */\n    EventEmitter.ALL_EVENT = '__all';\n    EventEmitter.headerClickEventName = 'stackHeaderClick';\n    EventEmitter.headerTouchStartEventName = 'stackHeaderTouchStart';\n    class BubblingEvent {\n        /** @internal */\n        constructor(\n        /** @internal */\n        _name, \n        /** @internal */\n        _target) {\n            this._name = _name;\n            this._target = _target;\n            /** @internal */\n            this._isPropagationStopped = false;\n        }\n        get name() { return this._name; }\n        get target() { return this._target; }\n        /** @deprecated Use {@link (EventEmitter:namespace).(BubblingEvent:class).target} instead */\n        get origin() { return this._target; }\n        get isPropagationStopped() { return this._isPropagationStopped; }\n        stopPropagation() {\n            this._isPropagationStopped = true;\n        }\n    }\n    EventEmitter.BubblingEvent = BubblingEvent;\n    class ClickBubblingEvent extends BubblingEvent {\n        /** @internal */\n        constructor(name, target, \n        /** @internal */\n        _mouseEvent) {\n            super(name, target);\n            this._mouseEvent = _mouseEvent;\n        }\n        get mouseEvent() { return this._mouseEvent; }\n    }\n    EventEmitter.ClickBubblingEvent = ClickBubblingEvent;\n    class TouchStartBubblingEvent extends BubblingEvent {\n        /** @internal */\n        constructor(name, target, \n        /** @internal */\n        _touchEvent) {\n            super(name, target);\n            this._touchEvent = _touchEvent;\n        }\n        get touchEvent() { return this._touchEvent; }\n    }\n    EventEmitter.TouchStartBubblingEvent = TouchStartBubblingEvent;\n})(EventEmitter = exports.EventEmitter || (exports.EventEmitter = {}));\n//# sourceMappingURL=event-emitter.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","EventEmitter","_allEventSubscriptions","_subscriptionsMap","Map","unbind","removeEventListener","trigger","emit","name","args","eventName","subcriptions","get","undefined","slice","i","length","subscription","emitAllEvent","tryBubbleEvent","subs","event","BubblingEvent","emitUnknown","callback","removeUnknownEventListener","addUnknownEventListener","addEventListener","ALL_EVENT","push","subscriptions","set","removeSubscription","Error","idx","indexOf","splice","allEventSubscriptionsCount","unknownArgs","unshift","allEventSubcriptions","headerClickEventName","headerTouchStartEventName","_name","_target","_isPropagationStopped","ClickBubblingEvent","target","_mouseEvent","TouchStartBubblingEvent","_touchEvent"]
}
