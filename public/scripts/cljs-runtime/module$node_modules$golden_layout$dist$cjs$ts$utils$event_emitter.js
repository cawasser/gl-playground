shadow$provide.module$node_modules$golden_layout$dist$cjs$ts$utils$event_emitter=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.EventEmitter=void 0;class EventEmitter{constructor(){this._allEventSubscriptions=[];this._subscriptionsMap=new Map;this.unbind=this.removeEventListener;this.trigger=this.emit}tryBubbleEvent(name,args){}emit(eventName,...args){let subcriptions=this._subscriptionsMap.get(eventName);if(void 0!==subcriptions){subcriptions=
subcriptions.slice();for(let i=0;i<subcriptions.length;i++)(0,subcriptions[i])(...args)}this.emitAllEvent(eventName,args);this.tryBubbleEvent(eventName,args)}emitUnknown(eventName,...args){let subs=this._subscriptionsMap.get(eventName);if(void 0!==subs){subs=subs.slice();for(let i=0;i<subs.length;i++)subs[i](...args)}this.emitAllEvent(eventName,args);this.tryBubbleEvent(eventName,args)}emitBaseBubblingEvent(eventName){const event=new EventEmitter.BubblingEvent(eventName,this);this.emitUnknown(eventName,
event)}emitUnknownBubblingEvent(eventName){const event=new EventEmitter.BubblingEvent(eventName,this);this.emitUnknown(eventName,event)}removeEventListener(eventName,callback){this.removeUnknownEventListener(eventName,callback)}off(eventName,callback){this.removeEventListener(eventName,callback)}addEventListener(eventName,callback){this.addUnknownEventListener(eventName,callback)}on(eventName,callback){this.addEventListener(eventName,callback)}addUnknownEventListener(eventName,callback){if(eventName===
EventEmitter.ALL_EVENT)this._allEventSubscriptions.push(callback);else{let subscriptions=this._subscriptionsMap.get(eventName);void 0!==subscriptions?subscriptions.push(callback):(subscriptions=[callback],this._subscriptionsMap.set(eventName,subscriptions))}}removeUnknownEventListener(eventName,callback){if(eventName===EventEmitter.ALL_EVENT)this.removeSubscription(eventName,this._allEventSubscriptions,callback);else{const subscriptions=this._subscriptionsMap.get(eventName);if(void 0===subscriptions)throw Error("No subscribtions to unsubscribe for event "+
eventName);this.removeSubscription(eventName,subscriptions,callback)}}removeSubscription(eventName,subscriptions,callback){callback=subscriptions.indexOf(callback);if(0>callback)throw Error("Nothing to unbind for "+eventName);subscriptions.splice(callback,1)}emitAllEvent(eventName,args){const allEventSubscriptionsCount=this._allEventSubscriptions.length;if(0<allEventSubscriptionsCount){args=args.slice();args.unshift(eventName);eventName=this._allEventSubscriptions.slice();for(let i=0;i<allEventSubscriptionsCount;i++)eventName[i](args)}}}
exports.EventEmitter=EventEmitter;(function(EventEmitter){EventEmitter.ALL_EVENT="__all";EventEmitter.headerClickEventName="stackHeaderClick";EventEmitter.headerTouchStartEventName="stackHeaderTouchStart";class BubblingEvent{constructor(_name,_target){this._name=_name;this._target=_target;this._isPropagationStopped=!1}get name(){return this._name}get target(){return this._target}get origin(){return this._target}get isPropagationStopped(){return this._isPropagationStopped}stopPropagation(){this._isPropagationStopped=
!0}}EventEmitter.BubblingEvent=BubblingEvent;class ClickBubblingEvent extends BubblingEvent{constructor(name,target,_mouseEvent){super(name,target);this._mouseEvent=_mouseEvent}get mouseEvent(){return this._mouseEvent}}EventEmitter.ClickBubblingEvent=ClickBubblingEvent;class TouchStartBubblingEvent extends BubblingEvent{constructor(name,target,_touchEvent){super(name,target);this._touchEvent=_touchEvent}get touchEvent(){return this._touchEvent}}EventEmitter.TouchStartBubblingEvent=TouchStartBubblingEvent})(EventEmitter=
exports.EventEmitter||(exports.EventEmitter={}))}
//# sourceMappingURL=module$node_modules$golden_layout$dist$cjs$ts$utils$event_emitter.js.map
