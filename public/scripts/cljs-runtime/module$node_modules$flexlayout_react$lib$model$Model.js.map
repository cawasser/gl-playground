{
"version":3,
"file":"module$node_modules$flexlayout_react$lib$model$Model.js",
"lineCount":23,
"mappings":"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",
"sources":["node_modules/flexlayout-react/lib/model/Model.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$flexlayout_react$lib$model$Model\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Attribute_1 = require(\"../Attribute\");\nvar AttributeDefinitions_1 = require(\"../AttributeDefinitions\");\nvar DockLocation_1 = require(\"../DockLocation\");\nvar Orientation_1 = require(\"../Orientation\");\nvar Rect_1 = require(\"../Rect\");\nvar Actions_1 = require(\"./Actions\");\nvar BorderNode_1 = require(\"./BorderNode\");\nvar BorderSet_1 = require(\"./BorderSet\");\nvar RowNode_1 = require(\"./RowNode\");\nvar TabNode_1 = require(\"./TabNode\");\nvar TabSetNode_1 = require(\"./TabSetNode\");\n/**\n * Class containing the Tree of Nodes used by the FlexLayout component\n */\nvar Model = /** @class */ (function () {\n    /**\n     * 'private' constructor. Use the static method Model.fromJson(json) to create a model\n     *  @hidden @internal\n     */\n    function Model() {\n        /** @hidden @internal */\n        this._borderRects = { inner: Rect_1.default.empty(), outer: Rect_1.default.empty() };\n        this._attributes = {};\n        this._idMap = {};\n        this._nextId = 0;\n        this._borders = new BorderSet_1.default(this);\n        this._pointerFine = true;\n    }\n    /**\n     * Loads the model from the given json object\n     * @param json the json model to load\n     * @returns {Model} a new Model object\n     */\n    Model.fromJson = function (json) {\n        var model = new Model();\n        Model._attributeDefinitions.fromJson(json.global, model._attributes);\n        if (json.borders) {\n            model._borders = BorderSet_1.default._fromJson(json.borders, model);\n        }\n        model._root = RowNode_1.default._fromJson(json.layout, model);\n        model._tidy(); // initial tidy of node tree\n        return model;\n    };\n    /** @hidden @internal */\n    Model._createAttributeDefinitions = function () {\n        var attributeDefinitions = new AttributeDefinitions_1.default();\n        // splitter\n        attributeDefinitions.add(\"splitterSize\", -1).setType(Attribute_1.default.INT);\n        attributeDefinitions.add(\"enableEdgeDock\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"marginInsets\", { top: 0, right: 0, bottom: 0, left: 0 }).setType(Attribute_1.default.JSON);\n        // tab\n        attributeDefinitions.add(\"tabEnableClose\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabCloseType\", 1).setType(Attribute_1.default.INT);\n        attributeDefinitions.add(\"tabEnableFloat\", false).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabEnableDrag\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabEnableRename\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabClassName\", undefined).setType(Attribute_1.default.STRING);\n        attributeDefinitions.add(\"tabIcon\", undefined).setType(Attribute_1.default.STRING);\n        attributeDefinitions.add(\"tabEnableRenderOnDemand\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabDragSpeed\", 0.3).setType(Attribute_1.default.NUMBER);\n        // tabset\n        attributeDefinitions.add(\"tabSetEnableDeleteWhenEmpty\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabSetEnableDrop\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabSetEnableDrag\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabSetEnableDivide\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabSetEnableMaximize\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabSetAutoSelectTab\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabSetClassNameTabStrip\", undefined).setType(Attribute_1.default.STRING);\n        attributeDefinitions.add(\"tabSetClassNameHeader\", undefined).setType(Attribute_1.default.STRING);\n        attributeDefinitions.add(\"tabSetEnableTabStrip\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"tabSetHeaderHeight\", 0).setType(Attribute_1.default.INT).setFrom(0);\n        attributeDefinitions.add(\"tabSetTabStripHeight\", 0).setType(Attribute_1.default.INT).setFrom(0);\n        attributeDefinitions.add(\"tabSetMarginInsets\", { top: 0, right: 0, bottom: 0, left: 0 }).setType(Attribute_1.default.JSON);\n        attributeDefinitions.add(\"tabSetBorderInsets\", { top: 0, right: 0, bottom: 0, left: 0 }).setType(Attribute_1.default.JSON);\n        attributeDefinitions.add(\"tabSetTabLocation\", \"top\").setType(Attribute_1.default.STRING);\n        attributeDefinitions.add(\"tabSetMinWidth\", 0).setType(Attribute_1.default.NUMBER);\n        attributeDefinitions.add(\"tabSetMinHeight\", 0).setType(Attribute_1.default.NUMBER);\n        // border\n        attributeDefinitions.add(\"borderSize\", 200).setType(Attribute_1.default.INT).setFrom(0);\n        attributeDefinitions.add(\"borderMinSize\", 0).setType(Attribute_1.default.INT).setFrom(0);\n        attributeDefinitions.add(\"borderBarSize\", 0).setType(Attribute_1.default.INT).setFrom(0);\n        attributeDefinitions.add(\"borderEnableDrop\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"borderAutoSelectTabWhenOpen\", true).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"borderAutoSelectTabWhenClosed\", false).setType(Attribute_1.default.BOOLEAN);\n        attributeDefinitions.add(\"borderClassName\", undefined).setType(Attribute_1.default.STRING);\n        return attributeDefinitions;\n    };\n    /** @hidden @internal */\n    Model.prototype._setChangeListener = function (listener) {\n        this._changeListener = listener;\n    };\n    /**\n     * Get the currently active tabset node\n     */\n    Model.prototype.getActiveTabset = function () {\n        if (this._activeTabSet && this.getNodeById(this._activeTabSet.getId())) {\n            return this._activeTabSet;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /** @hidden @internal */\n    Model.prototype._setActiveTabset = function (tabsetNode) {\n        this._activeTabSet = tabsetNode;\n    };\n    /**\n     * Get the currently maximized tabset node\n     */\n    Model.prototype.getMaximizedTabset = function () {\n        return this._maximizedTabSet;\n    };\n    /** @hidden @internal */\n    Model.prototype._setMaximizedTabset = function (tabsetNode) {\n        this._maximizedTabSet = tabsetNode;\n    };\n    /**\n     * Gets the root RowNode of the model\n     * @returns {RowNode}\n     */\n    Model.prototype.getRoot = function () {\n        return this._root;\n    };\n    /**\n     * Gets the\n     * @returns {BorderSet|*}\n     */\n    Model.prototype.getBorderSet = function () {\n        return this._borders;\n    };\n    /** @hidden @internal */\n    Model.prototype._getOuterInnerRects = function () {\n        return this._borderRects;\n    };\n    /** @hidden @internal */\n    Model.prototype._getPointerFine = function () {\n        return this._pointerFine;\n    };\n    /** @hidden @internal */\n    Model.prototype._setPointerFine = function (pointerFine) {\n        this._pointerFine = pointerFine;\n    };\n    /**\n     * Visits all the nodes in the model and calls the given function for each\n     * @param fn a function that takes visited node and a integer level as parameters\n     */\n    Model.prototype.visitNodes = function (fn) {\n        this._borders._forEachNode(fn);\n        this._root._forEachNode(fn, 0);\n    };\n    /**\n     * Gets a node by its id\n     * @param id the id to find\n     */\n    Model.prototype.getNodeById = function (id) {\n        return this._idMap[id];\n    };\n    /**\n     * Update the node tree by performing the given action,\n     * Actions should be generated via static methods on the Actions class\n     * @param action the action to perform\n     * @returns added Node for Actions.addNode; undefined otherwise\n     */\n    Model.prototype.doAction = function (action) {\n        var returnVal = undefined;\n        // console.log(action);\n        switch (action.type) {\n            case Actions_1.default.ADD_NODE: {\n                var newNode = new TabNode_1.default(this, action.data.json, true);\n                var toNode = this._idMap[action.data.toNode];\n                if (toNode instanceof TabSetNode_1.default || toNode instanceof BorderNode_1.default || toNode instanceof RowNode_1.default) {\n                    toNode.drop(newNode, DockLocation_1.default.getByName(action.data.location), action.data.index, action.data.select);\n                    returnVal = newNode;\n                }\n                break;\n            }\n            case Actions_1.default.MOVE_NODE: {\n                var fromNode = this._idMap[action.data.fromNode];\n                if (fromNode instanceof TabNode_1.default || fromNode instanceof TabSetNode_1.default) {\n                    var toNode = this._idMap[action.data.toNode];\n                    if (toNode instanceof TabSetNode_1.default || toNode instanceof BorderNode_1.default || toNode instanceof RowNode_1.default) {\n                        toNode.drop(fromNode, DockLocation_1.default.getByName(action.data.location), action.data.index, action.data.select);\n                    }\n                }\n                break;\n            }\n            case Actions_1.default.DELETE_TAB: {\n                var node = this._idMap[action.data.node];\n                if (node instanceof TabNode_1.default) {\n                    delete this._idMap[action.data.node];\n                    node._delete();\n                }\n                break;\n            }\n            case Actions_1.default.FLOAT_TAB: {\n                var node = this._idMap[action.data.node];\n                if (node instanceof TabNode_1.default) {\n                    node._setFloating(true);\n                }\n                break;\n            }\n            case Actions_1.default.UNFLOAT_TAB: {\n                var node = this._idMap[action.data.node];\n                if (node instanceof TabNode_1.default) {\n                    node._setFloating(false);\n                }\n                break;\n            }\n            case Actions_1.default.RENAME_TAB: {\n                var node = this._idMap[action.data.node];\n                if (node instanceof TabNode_1.default) {\n                    node._setName(action.data.text);\n                }\n                break;\n            }\n            case Actions_1.default.SELECT_TAB: {\n                var tabNode = this._idMap[action.data.tabNode];\n                if (tabNode instanceof TabNode_1.default) {\n                    var parent_1 = tabNode.getParent();\n                    var pos = parent_1.getChildren().indexOf(tabNode);\n                    if (parent_1 instanceof BorderNode_1.default) {\n                        if (parent_1.getSelected() === pos) {\n                            parent_1._setSelected(-1);\n                        }\n                        else {\n                            parent_1._setSelected(pos);\n                        }\n                    }\n                    else if (parent_1 instanceof TabSetNode_1.default) {\n                        if (parent_1.getSelected() !== pos) {\n                            parent_1._setSelected(pos);\n                        }\n                        this._activeTabSet = parent_1;\n                    }\n                }\n                break;\n            }\n            case Actions_1.default.SET_ACTIVE_TABSET: {\n                var tabsetNode = this._idMap[action.data.tabsetNode];\n                if (tabsetNode instanceof TabSetNode_1.default) {\n                    this._activeTabSet = tabsetNode;\n                }\n                break;\n            }\n            case Actions_1.default.ADJUST_SPLIT: {\n                var node1 = this._idMap[action.data.node1];\n                var node2 = this._idMap[action.data.node2];\n                if ((node1 instanceof TabSetNode_1.default || node1 instanceof RowNode_1.default) && (node2 instanceof TabSetNode_1.default || node2 instanceof RowNode_1.default)) {\n                    this._adjustSplitSide(node1, action.data.weight1, action.data.pixelWidth1);\n                    this._adjustSplitSide(node2, action.data.weight2, action.data.pixelWidth2);\n                }\n                break;\n            }\n            case Actions_1.default.ADJUST_BORDER_SPLIT: {\n                var node = this._idMap[action.data.node];\n                if (node instanceof BorderNode_1.default) {\n                    node._setSize(action.data.pos);\n                }\n                break;\n            }\n            case Actions_1.default.MAXIMIZE_TOGGLE: {\n                var node = this._idMap[action.data.node];\n                if (node instanceof TabSetNode_1.default) {\n                    if (node === this._maximizedTabSet) {\n                        this._maximizedTabSet = undefined;\n                    }\n                    else {\n                        this._maximizedTabSet = node;\n                        this._activeTabSet = node;\n                    }\n                }\n                break;\n            }\n            case Actions_1.default.UPDATE_MODEL_ATTRIBUTES: {\n                this._updateAttrs(action.data.json);\n                break;\n            }\n            case Actions_1.default.UPDATE_NODE_ATTRIBUTES: {\n                var node = this._idMap[action.data.node];\n                node._updateAttrs(action.data.json);\n                break;\n            }\n            default:\n                break;\n        }\n        this._updateIdMap();\n        if (this._changeListener !== undefined) {\n            this._changeListener();\n        }\n        return returnVal;\n    };\n    /** @hidden @internal */\n    Model.prototype._updateIdMap = function () {\n        var _this = this;\n        // regenerate idMap to stop it building up\n        this._idMap = {};\n        this.visitNodes(function (node) { return (_this._idMap[node.getId()] = node); });\n        // console.log(JSON.stringify(Object.keys(this._idMap)));\n    };\n    /** @hidden @internal */\n    Model.prototype._adjustSplitSide = function (node, weight, pixels) {\n        node._setWeight(weight);\n        if (node.getWidth() != null && node.getOrientation() === Orientation_1.default.VERT) {\n            node._updateAttrs({ width: pixels });\n        }\n        else if (node.getHeight() != null && node.getOrientation() === Orientation_1.default.HORZ) {\n            node._updateAttrs({ height: pixels });\n        }\n    };\n    /**\n     * Converts the model to a json object\n     * @returns {*} json object that represents this model\n     */\n    Model.prototype.toJson = function () {\n        var json = { global: {}, layout: {} };\n        Model._attributeDefinitions.toJson(json.global, this._attributes);\n        // save state of nodes\n        this.visitNodes(function (node) {\n            node._fireEvent(\"save\", undefined);\n        });\n        json.borders = this._borders._toJson();\n        json.layout = this._root._toJson();\n        return json;\n    };\n    Model.prototype.getSplitterSize = function () {\n        var splitterSize = this._attributes.splitterSize;\n        if (splitterSize === -1) {\n            // use defaults\n            splitterSize = this._pointerFine ? 8 : 12; // larger for mobile\n        }\n        return splitterSize;\n    };\n    Model.prototype.isEnableEdgeDock = function () {\n        return this._attributes.enableEdgeDock;\n    };\n    /** @hidden @internal */\n    Model.prototype._addNode = function (node) {\n        var id = node.getId();\n        if (this._idMap[id] !== undefined) {\n            throw new Error(\"Error: each node must have a unique id, duplicate id:\" + node.getId());\n        }\n        if (node.getType() !== \"splitter\") {\n            this._idMap[id] = node;\n        }\n    };\n    /** @hidden @internal */\n    Model.prototype._layout = function (rect, metrics) {\n        var _a;\n        // let start = Date.now();\n        this._borderRects = this._borders._layoutBorder({ outer: rect, inner: rect }, metrics);\n        rect = this._borderRects.inner.removeInsets(this._getAttribute(\"marginInsets\"));\n        (_a = this._root) === null || _a === void 0 ? void 0 : _a.calcMinSize();\n        this._root._layout(rect, metrics);\n        // console.log(\"layout time: \" + (Date.now() - start));\n        return rect;\n    };\n    /** @hidden @internal */\n    Model.prototype._findDropTargetNode = function (dragNode, x, y) {\n        var node = this._root._findDropTargetNode(dragNode, x, y);\n        if (node === undefined) {\n            node = this._borders._findDropTargetNode(dragNode, x, y);\n        }\n        return node;\n    };\n    /** @hidden @internal */\n    Model.prototype._tidy = function () {\n        // console.log(\"before _tidy\", this.toString());\n        this._root._tidy();\n        // console.log(\"after _tidy\", this.toString());\n    };\n    /** @hidden @internal */\n    Model.prototype._updateAttrs = function (json) {\n        Model._attributeDefinitions.update(json, this._attributes);\n    };\n    /** @hidden @internal */\n    Model.prototype._nextUniqueId = function () {\n        this._nextId++;\n        while (this._idMap[\"#\" + this._nextId] !== undefined) {\n            this._nextId++;\n        }\n        return \"#\" + this._nextId;\n    };\n    /** @hidden @internal */\n    Model.prototype._getAttribute = function (name) {\n        return this._attributes[name];\n    };\n    /**\n     * Sets a function to allow/deny dropping a node\n     * @param onAllowDrop function that takes the drag node and DropInfo and returns true if the drop is allowed\n     */\n    Model.prototype.setOnAllowDrop = function (onAllowDrop) {\n        this._onAllowDrop = onAllowDrop;\n    };\n    /** @hidden @internal */\n    Model.prototype._getOnAllowDrop = function () {\n        return this._onAllowDrop;\n    };\n    Model.prototype.toString = function () {\n        return JSON.stringify(this.toJson());\n    };\n    /** @hidden @internal */\n    Model._attributeDefinitions = Model._createAttributeDefinitions();\n    return Model;\n}());\nexports.default = Model;\n//# sourceMappingURL=Model.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Attribute_1","AttributeDefinitions_1","DockLocation_1","Orientation_1","Rect_1","Actions_1","BorderNode_1","BorderSet_1","RowNode_1","TabNode_1","TabSetNode_1","Model","_borderRects","inner","default","empty","outer","_attributes","_idMap","_nextId","_borders","_pointerFine","fromJson","Model.fromJson","json","model","_attributeDefinitions","borders","_fromJson","_root","layout","_tidy","_createAttributeDefinitions","Model._createAttributeDefinitions","attributeDefinitions","add","setType","INT","BOOLEAN","top","right","bottom","left","JSON","undefined","STRING","NUMBER","setFrom","prototype","_setChangeListener","Model.prototype._setChangeListener","listener","_changeListener","getActiveTabset","Model.prototype.getActiveTabset","_activeTabSet","getNodeById","getId","_setActiveTabset","Model.prototype._setActiveTabset","tabsetNode","getMaximizedTabset","Model.prototype.getMaximizedTabset","_maximizedTabSet","_setMaximizedTabset","Model.prototype._setMaximizedTabset","getRoot","Model.prototype.getRoot","getBorderSet","Model.prototype.getBorderSet","_getOuterInnerRects","Model.prototype._getOuterInnerRects","_getPointerFine","Model.prototype._getPointerFine","_setPointerFine","Model.prototype._setPointerFine","pointerFine","visitNodes","Model.prototype.visitNodes","fn","_forEachNode","Model.prototype.getNodeById","id","doAction","Model.prototype.doAction","action","returnVal","type","ADD_NODE","newNode","data","toNode","drop","getByName","location","index","select","MOVE_NODE","fromNode","DELETE_TAB","node","_delete","FLOAT_TAB","_setFloating","UNFLOAT_TAB","RENAME_TAB","_setName","text","SELECT_TAB","tabNode","parent_1","getParent","pos","getChildren","indexOf","getSelected","_setSelected","SET_ACTIVE_TABSET","ADJUST_SPLIT","node1","node2","_adjustSplitSide","weight1","pixelWidth1","weight2","pixelWidth2","ADJUST_BORDER_SPLIT","_setSize","MAXIMIZE_TOGGLE","UPDATE_MODEL_ATTRIBUTES","_updateAttrs","UPDATE_NODE_ATTRIBUTES","_updateIdMap","Model.prototype._updateIdMap","_this","Model.prototype._adjustSplitSide","weight","pixels","_setWeight","getWidth","getOrientation","VERT","width","getHeight","HORZ","height","toJson","Model.prototype.toJson","_fireEvent","_toJson","getSplitterSize","Model.prototype.getSplitterSize","splitterSize","isEnableEdgeDock","Model.prototype.isEnableEdgeDock","enableEdgeDock","_addNode","Model.prototype._addNode","Error","getType","_layout","Model.prototype._layout","rect","metrics","_a","_layoutBorder","removeInsets","_getAttribute","calcMinSize","_findDropTargetNode","Model.prototype._findDropTargetNode","dragNode","x","y","Model.prototype._tidy","Model.prototype._updateAttrs","update","_nextUniqueId","Model.prototype._nextUniqueId","Model.prototype._getAttribute","name","setOnAllowDrop","Model.prototype.setOnAllowDrop","onAllowDrop","_onAllowDrop","_getOnAllowDrop","Model.prototype._getOnAllowDrop","toString","Model.prototype.toString","stringify"]
}
